@using Microsoft.AspNetCore.Mvc.ViewComponents
@using Microsoft.Extensions.Logging
@using Volo.Abp.Data
@using Volo.Abp.Reflection
@using Volo.CmsKit.Contents
@using Volo.CmsKit.Web.Renderers;
@using Volo.CmsKit.Web.Pages.CmsKit.Components.Contents;

@model ContentFragmentViewComponent

@inject IMarkdownToHtmlRenderer MarkdownRenderer
@inject IViewComponentSelector ViewComponentSelector
@inject ILogger<ContentFragmentViewComponent> Logger

@foreach (var contentFragment in Model.ContentDto.ContentFragments)
{
    if (contentFragment.Type == ContentConsts.Markdown)
    {
        @Html.Raw(await MarkdownRenderer.RenderAsync(contentFragment.GetProperty<string>("Content"), Model.ContentDto.AllowHtmlTags, Model.ContentDto.PreventXSS, Model.ContentDto.ReferralLink))
    }
    else if (contentFragment.Type == ContentConsts.Widget)
    {
        var componentName = contentFragment.GetProperty<string>("Type");
        var descriptor = ViewComponentSelector.SelectComponent(componentName);
        var componentParameters = descriptor.Parameters;
        var parameters = new Dictionary<string, object>(contentFragment.ExtraProperties);

        foreach (var componentParameter in componentParameters)
        {
            if (string.IsNullOrWhiteSpace(componentParameter.Name))
            {
                continue;
            }
            if(parameters.TryGetValue(componentParameter.Name, out var value))
            {
                parameters[componentParameter.Name] = TypeHelper.ConvertFrom(componentParameter.ParameterType, value);
            }
        }

        @try
        {
            await Component.InvokeAsync(componentName, parameters);
        }
        catch (Exception ex)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">

                This part of content couldn't be loaded.
            </div>

            Logger.LogWarning(ex, $"Couldn't load the widget: {componentName}");
        }
    }
}